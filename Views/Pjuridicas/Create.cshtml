@model Estacionamento.Models.Pjuridica

@{
    ViewBag.Title = "Create";
}


<style>

    #hr {
        margin-right: 30%;
    }

    #sub {
        margin-left: 13%;
        margin-bottom: 50px;
    }

    #titulo {
        margin-left: 12%;
    }

    #back {
        background: #e8e8e8;
        margin-left: 35%;
        margin-right: 35%;
        text-align: center;
        padding: 10px;
        border-radius: 5px 5px 5px 5px;
    }
    #erro {
        border-radius: 5px 5px 5px 5px;
        background: #e8e8e8;
        margin-left: 25%;
        margin-right: 25%;
        margin-bottom: 45px;
        color: red;
        padding: 10px;
        text-align: center;
        border: 1px solid red;
        font-family: 'OCR A';
        font-weight: bold;
    }

    body {
        background: #a7a6a6;
    }
</style>

<h2 id="titulo">Create</h2>

<h4 id="sub">Pjuridica</h4>
<hr id="hr">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        @if (ViewBag.Mensagem != null)
        {
            <h4 id="erro"> @ViewBag.Mensagem </h4>
        }
        

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Razaosocial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Razaosocial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Razaosocial, "", new { @class = "text-danger" })
                @if (ViewBag.Mensagem != null)
                {
                    <script>
                        document.getElementById('Razaosocial').value = '';
                    </script>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cnpj, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cnpj, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cnpj, "", new { @class = "text-danger" })

                @if (ViewBag.Mensagem != null)
                {
                    <span class="field-validation-error text-danger">@ViewBag.Mensagem</span>
                    <script>
                        document.getElementById('Cnpj').value = '';
                    </script>
                }

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nomefantasia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nomefantasia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nomefantasia, "", new { @class = "text-danger" })
                @if (ViewBag.Mensagem != null)
                {
                    <script>
                        document.getElementById('Nomefantasia').value = '';
                    </script>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                @if (ViewBag.Mensagem != null)
                {
                    <script>
                        document.getElementById('Endereco').value = '';
                    </script>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                @if (ViewBag.Mensagem != null)
                {
                    <script>
                        document.getElementById('Telefone').value = '';
                    </script>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                @if (ViewBag.Mensagem != null)
                {
                    <script>
                        document.getElementById('Email').value = '';
                    </script>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="back">
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
